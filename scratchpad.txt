Aylien Text API:
AppID 18f79a11
apiKey 4b1a36d7078396c716ac7bfa4f3b14ec
endpoint https://api.aylien.com/api/v1

Aylien News API:
AppID: c42feefc
API KEY: 80a6c54f9f551c9b48b4d505279da58a
endpoint: https://api.aylien.com/news

MeaningCloud
API Key 47e8e07c984a04de4f920b7e3a583d5b
endpoint: https://api.meaningcloud.com/sentiment-2.1
example code:
var https = require('follow-redirects').https;
var fs = require('fs');


Open Weather
endpoint: 'https://api.openweathermap.org/data/2.5/weather?zip='
apiKey: e7e66ceeab7188cf96ef0bbe2e64b9ac

Pixabay
endpoint: https://pixabay.com/api/?key=<>&q=<subject>&image_type=photo
API key: 14246493-aa72736588a91c2f68f608bff

GeoNames
endpoint: http://api.geonames.org/postalCodeLookupJSON?postalcode=6600&username=demo
apiKey: nightside1313

WeatherBit.io
endpoint: https://api.weatherbit.io/v2.0/forecast/daily?city=Raleigh,NC&key=API_KEY
apiKey: f77c86657daa470c98eea20e29af9467
{
[Description, Required Parameters, Example]
[Get forecast by lat/lon	lat,lon	&lat=38.123&lon=-78.543]
[Get forecast by city name,[city, state(optional), country (optional)],[[&city=Raleigh&country=US],[&city=Raleigh,NC],[&city=Raleigh,North+Carolina]]
[Get forecast by postal code,	[postal_code,country (optional)],[&postal_code=27601&country=US]]
}


const baseURL = "http://localhost";
const portID = 9000;
const totalUrl = `${baseURL}:${portID}`
let bufferDocument = new DocumentFragment(); // create fragment as change buffer
let formData = {};
let weatherGet = '';
let imageURL = '';
let dataToPost = {};
let location = '';

// Create a new date instance dynamically with JS
let d = new Date();
let newDate = d.getFullYear()+'-'+ d.getMonth()+'-'+ d.getDate();


import 'regenerator-runtime/runtime'

document.getElementById('generate').addEventListener('click', handleSubmit);


async function handleSubmit(e){
  location =  document.getElementById('locationData').value;
  const date = document.getElementById('travelDates').value;
  console.log(`${location} ${date} ${newDate}`)
  if (Client.checkZipCode(location)){
    weatherGet = '/weatherZIP';
  }else{
    weatherGet = '/weatherCity';
  }
  console.log(date - newDate);
  if(date - newDate <= 7){
    await getWeather(totalUrl,weatherGet,location);
  }
  await getPictures(totalUrl,location);
  this.then(postData());
}

const getPictures = async (homeURL,location) => {
  const fetchURL = `${homeURL}/views/?location=${location}`
  console.log(fetchURL);
  const res = await fetch(fetchURL)
  try {
    const data = await res.json();
    imageURL = data.pageURL;
  }catch(error){
    console.log("error: ", error);
  }
}

const getWeather = async (homeURL, weatherGet, location)=>{
  const fetchURL = `${homeURL}${weatherGet}/?location=${location}`;
  console.log(fetchURL);
  const res = await fetch(fetchURL);
  try {
    const data = await res.json();
//    console.log(data)
    currentTemp = data.temp;
    currentConditions = data.condition;
    // const date = document.getElementById('dataData').value;
    dataToPost = {
      date: newDate,
      temp: currentTemp,
      condition: currentConditions
    };
    return dataToPost;
  }catch(error) {
    console.log("error", error);  // appropriately handle the error
  }
}

function postData() {
  const entryContainer = document.getElementById('entryHolder');
  const entryPicture = document.getElementById('picture');
  const newPicture = document.createElement('a');
  newPicture.innerHTML = `href=${imageURL}" alt="${location}"`;
  entryPicture.appendChild(newPicture);
  const entryLocation = document.getElementById('locationName');
  entryLocation.innerHTML = location;
  const entryDate = document.getElementById('date');
  entryDate.innerHTML = `Date: ${dataToPost.date}`;
  const entryTemp = document.getElementById('temp');
  entryTemp.innerHTML = `Tempurature: ${dataToPost.temp}`;

}


export { handleSubmit }
